<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StudentsMapper">
    
    <resultMap type="Students" id="StudentsResult">
        <result property="studentId"    column="student_id"    />
        <result property="name"    column="name"    />
        <result property="gender"    column="gender"    />
        <result property="yearLevel"    column="year_level"    />
        <result property="className"    column="class_name"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectStudentsVo">
        select student_id, name, gender, year_level, class_name, created_at, updated_at from students
    </sql>

    <select id="selectStudentsList" parameterType="Students" resultMap="StudentsResult">
        <include refid="selectStudentsVo"/>
        <where>  
            <if test="studentId != null  and studentId != ''"> and student_id = #{studentId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="yearLevel != null  and yearLevel != ''"> and year_level = #{yearLevel}</if>
            <if test="className != null  and className != ''"> and class_name like concat('%', #{className}, '%')</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectStudentsByStudentId" parameterType="String" resultMap="StudentsResult">
        <include refid="selectStudentsVo"/>
        where student_id = #{studentId}
    </select>
        
    <insert id="insertStudents" parameterType="Students">
        insert into students
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">student_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="gender != null">gender,</if>
            <if test="yearLevel != null">year_level,</if>
            <if test="className != null">class_name,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">#{studentId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="gender != null">#{gender},</if>
            <if test="yearLevel != null">#{yearLevel},</if>
            <if test="className != null">#{className},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateStudents" parameterType="Students">
        update students
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="yearLevel != null">year_level = #{yearLevel},</if>
            <if test="className != null">class_name = #{className},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteStudentsByStudentId" parameterType="String">
        delete from students where student_id = #{studentId}
    </delete>

    <delete id="deleteStudentsByStudentIds" parameterType="String">
        delete from students where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
</mapper>